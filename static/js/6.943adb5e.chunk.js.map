{"version":3,"sources":["components/Common/FormsControl/FormsControl.module.scss","utils/validators/validators.js","components/Common/FormsControl/FormsControl.js","reduxForm/forms.js","components/Login/Login.js"],"names":["module","exports","minLength","FormControl","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","input","Input","required","value","maxLengthCreator","maxLength","length","maxLength50","passwordMinLength","maxLength10","AddPostReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","placeholder","name","component","validate","LoginReduxForm","type","style","formSummaryError","AddMessageReduxForm","connect","state","isAuth","auth","login","to","formData","email","password","rememberMe"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,4BAA4B,iBAAmB,yC,2ICSzFC,E,oDCNnBC,EAAc,SAAC,GAA0C,IAAD,IAAvCC,KAAOC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,MAAQC,EAAe,EAAfA,SAC5CC,EAAWH,GAAWC,EAC5B,OACI,yBAAKG,UAAWC,IAAOC,YAAc,KAAOH,EAAWE,IAAOJ,MAAQ,KAClE,6BACKC,GAEHC,GAAY,8BAAOF,KAKpBM,EAAW,SAACC,GACrB,OACI,kBAAC,EAAgBA,EACb,8CAAcA,EAAMC,MAAWD,MAK9BE,EAAQ,SAACF,GAClB,OACI,kBAAC,EAAgBA,EACb,2CAAWA,EAAMC,MAAWD,MD3B3BG,EAAW,SAAAC,GACpB,IAAIA,EACJ,MAAO,qBAGEC,EAAmB,SAAAC,GAAS,OAAI,SAAAF,GACzC,GAAIA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,cEA5BE,EAAcH,EAAiB,IAc/BI,GFV0BpB,EEUW,EFVE,SAAAe,GACzC,GAAIA,EAAMG,OAASlB,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,cEqC5BqB,EAAcL,EAAiB,IAgBxBM,EAAmBC,YAAU,CAAEC,KAAM,WAAlBD,EAdZ,SAAC,GAAsB,IAApBE,EAAmB,EAAnBA,aACnB,OACI,0BAAMC,SAAUD,GACZ,6BAEI,kBAACE,EAAA,EAAD,CAAOC,YAAY,mBAAmBC,KAAK,cAAcC,UAAWpB,EAAUqB,SAAU,CAACjB,EAAUO,MAEvG,6BACI,iDAOHW,EAAiBT,YAAU,CAAEC,KAAM,SAAlBD,EA3CZ,SAAC,GAA6B,IAA3BE,EAA0B,EAA1BA,aAAcrB,EAAY,EAAZA,MAC/B,OACI,0BAAMsB,SAAUD,GAIZ,6BACI,kBAACE,EAAA,EAAD,CAAOC,YAAY,QAAQC,KAAK,QAAQC,UAAWjB,EAAOkB,SAAU,CAACjB,MAEzE,6BACI,kBAACa,EAAA,EAAD,CAAOC,YAAY,WAAWC,KAAK,WAAWC,UAAWjB,EAAOoB,KAAK,WAAWF,SAAU,CAACjB,EAAUM,MAEzG,6BACI,kBAACO,EAAA,EAAD,CAAOM,KAAK,WAAWJ,KAAK,aAAaC,UAAU,UADvD,gBAGE1B,GAAS,yBAAKG,UAAW2B,IAAMC,kBAC5B/B,GAGL,6BACI,8CAwBHgC,EAAsBb,YAAU,CAAEC,KAAM,yBAAlBD,EA1DZ,SAAC,GAAsB,IAApBE,EAAmB,EAAnBA,aACtB,OACI,0BAAMC,SAAUD,GAEZ,kBAACE,EAAA,EAAD,CAAOG,UAAWpB,EAAUqB,SAAU,CAACjB,EAAUK,GAAcU,KAAK,iBAAiBD,YAAY,uBACjG,6BACI,8C,iCCdhB,2DA0BeS,uBAJO,SAACC,GAAD,MAAY,CAC9BC,OAAQD,EAAME,KAAKD,UAGiB,CAAEE,WAA3BJ,EApBD,SAAC,GAAqB,IAApBI,EAAmB,EAAnBA,MAMZ,OAN+B,EAAZF,OAMA,kBAAC,IAAD,CAAUG,GAAG,aAG5B,6BACI,sCACA,kBAAC,IAAD,CAAgBhB,SATP,SAACiB,GACdF,EAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/6.943adb5e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__oFNCF\",\"error\":\"FormsControl_error__68Qzq\",\"formSummaryError\":\"FormsControl_formSummaryError__3CnMR\"};","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = maxLength => value => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined; \r\n}\r\n\r\nexport const minLengthCreator = minLength => value => {\r\n    if (value.length < minLength) return `Min length is ${minLength} symbols`;\r\n    return undefined; \r\n}\r\n\r\n","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport styles from './FormsControl.module.scss';\r\n\r\nexport const FormControl = ({ meta: {touched, error}, children }) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            { hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    return (\r\n        <FormControl {...props}>\r\n            <textarea {...props.input} {...props} />\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport const Input = (props) => {\r\n    return (\r\n        <FormControl {...props}>\r\n            <input {...props.input} {...props} />\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text) => {\r\n    <div>\r\n        <Field placeholder={placeholder} name={name} component={component} validate={validators} {...props} /> {text}\r\n    </div>\r\n}","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Input, Textarea } from '../components/Common/FormsControl/FormsControl';\r\nimport { maxLengthCreator, minLengthCreator, required } from '../utils/validators/validators';\r\nimport style from '../components/Common/FormsControl/FormsControl.module.scss';\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst addMessageForm = ({ handleSubmit }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {/* {createField('Enter your message', 'newMessageBody', [required, maxLength50], Textarea)} */}\r\n            <Field component={Textarea} validate={[required, maxLength50]} name='newMessageBody' placeholder='Enter your message' />\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst passwordMinLength = minLengthCreator(6);\r\n\r\nconst LoginForm = ({ handleSubmit, error }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {/* {createField('Email', 'email', Input, [required])}\r\n            {createField('Password', 'password', [required, passwordMinLength], Input, {type: 'password'})}\r\n            {createField(null, 'rememberMe', null, Input, {type: 'checkbox'}, 'remember me')} */}\r\n            <div>\r\n                <Field placeholder='Email' name='email' component={Input} validate={[required]} />\r\n            </div>\r\n            <div>\r\n                <Field placeholder='Password' name='password' component={Input} type='password' validate={[required, passwordMinLength]} />\r\n            </div>\r\n            <div>\r\n                <Field type='checkbox' name='rememberMe' component='input' /> remember me\r\n            </div>\r\n            { error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst addPostForm = ({ handleSubmit }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                {/* {createField('it-kamasutra.com', 'myPostInput', { required, maxLength10 }, {Input})} */}\r\n                <Field placeholder='it-kamasutra.com' name='myPostInput' component={Textarea} validate={[required, maxLength10]} />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const AddPostReduxForm = reduxForm({ form: 'addPost' })(addPostForm);\r\nexport const LoginReduxForm = reduxForm({ form: 'login' })(LoginForm);\r\nexport const AddMessageReduxForm = reduxForm({ form: 'dialgueAddMessageForm' })(addMessageForm);\r\n","import React from 'react';\r\nimport { LoginReduxForm } from '../../reduxForm/forms';\r\nimport {connect} from 'react-redux';\r\nimport { login } from '../../redux/reducers/authReducer';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Login = ({login, isAuth}) => {\r\n    \r\n    const onSubmit = (formData) => {\r\n        login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (isAuth) return <Redirect to='/profile' />\r\n\r\n    return (\r\n        <div>\r\n            <h1>Log in</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(Login);"],"sourceRoot":""}