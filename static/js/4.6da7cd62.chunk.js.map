{"version":3,"sources":["components/Common/FormsControl/FormsControl.module.scss","utils/validators/validators.js","components/Common/FormsControl/FormsControl.js","reduxForm/forms.js","components/Profile/ProfileInfo/ProfileInfo.module.scss","components/Profile/MyPosts/MyPosts.module.scss","components/Profile/MyPosts/Post/Post.module.scss","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["module","exports","minLength","FormControl","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","input","Input","required","value","maxLengthCreator","maxLength","length","maxLength50","passwordMinLength","maxLength10","AddPostReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","placeholder","name","component","validate","LoginReduxForm","type","style","formSummaryError","AddMessageReduxForm","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","target","ProfileInfo","profile","login","src","alt","width","height","s","descriptionBlock","avatar","Preloader","Post","item","surname","message","like","MyPosts","React","memo","postsEls","postsData","reverse","map","posts","firstName","lastName","key","id","post","likesCount","postsBlock","addPost","myPostInput","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","updateNewPostText","text","action","updateNewPostTextAC","Profile","store","ProfileContainer","userId","this","match","params","authorizedUserId","getUserProfile","setTimeout","getStatus","isAuth","Component","AuthRedirectComponent","compose","auth","withRouter"],"mappings":"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","file":"static/js/4.6da7cd62.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__oFNCF\",\"error\":\"FormsControl_error__68Qzq\",\"formSummaryError\":\"FormsControl_formSummaryError__3CnMR\"};","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = maxLength => value => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined; \r\n}\r\n\r\nexport const minLengthCreator = minLength => value => {\r\n    if (value.length < minLength) return `Min length is ${minLength} symbols`;\r\n    return undefined; \r\n}\r\n\r\n","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport styles from './FormsControl.module.scss';\r\n\r\nexport const FormControl = ({ meta: {touched, error}, children }) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            { hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    return (\r\n        <FormControl {...props}>\r\n            <textarea {...props.input} {...props} />\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport const Input = (props) => {\r\n    return (\r\n        <FormControl {...props}>\r\n            <input {...props.input} {...props} />\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text) => {\r\n    <div>\r\n        <Field placeholder={placeholder} name={name} component={component} validate={validators} {...props} /> {text}\r\n    </div>\r\n}","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Input, Textarea } from '../components/Common/FormsControl/FormsControl';\r\nimport { maxLengthCreator, minLengthCreator, required } from '../utils/validators/validators';\r\nimport style from '../components/Common/FormsControl/FormsControl.module.scss';\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst addMessageForm = ({ handleSubmit }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {/* {createField('Enter your message', 'newMessageBody', [required, maxLength50], Textarea)} */}\r\n            <Field component={Textarea} validate={[required, maxLength50]} name='newMessageBody' placeholder='Enter your message' />\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst passwordMinLength = minLengthCreator(6);\r\n\r\nconst LoginForm = ({ handleSubmit, error }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {/* {createField('Email', 'email', Input, [required])}\r\n            {createField('Password', 'password', [required, passwordMinLength], Input, {type: 'password'})}\r\n            {createField(null, 'rememberMe', null, Input, {type: 'checkbox'}, 'remember me')} */}\r\n            <div>\r\n                <Field placeholder='Email' name='email' component={Input} validate={[required]} />\r\n            </div>\r\n            <div>\r\n                <Field placeholder='Password' name='password' component={Input} type='password' validate={[required, passwordMinLength]} />\r\n            </div>\r\n            <div>\r\n                <Field type='checkbox' name='rememberMe' component='input' /> remember me\r\n            </div>\r\n            { error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst addPostForm = ({ handleSubmit }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                {/* {createField('it-kamasutra.com', 'myPostInput', { required, maxLength10 }, {Input})} */}\r\n                <Field placeholder='it-kamasutra.com' name='myPostInput' component={Textarea} validate={[required, maxLength10]} />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const AddPostReduxForm = reduxForm({ form: 'addPost' })(addPostForm);\r\nexport const LoginReduxForm = reduxForm({ form: 'login' })(LoginForm);\r\nexport const AddMessageReduxForm = reduxForm({ form: 'dialgueAddMessageForm' })(addMessageForm);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"ProfileInfo_avatar__24C5s\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__t7QEY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__oehKN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1EnPD\"};","import React, { useState, useEffect } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    \r\n    let  [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n    \r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || 'Type status here'}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input\r\n                        autoFocus={true}\r\n                        onBlur={deactivateEditMode}\r\n                        value={status}\r\n                        onChange={onStatusChange}\r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.scss';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({ profile, login, status, updateStatus }) => {\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src=\"https://bit.ly/2VMf4ET\" alt=\"\" width=\"100%\" height=\"350px\" />\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                <img className={s.avatar} src=\"https://bit.ly/39IgisU\" alt=\"\" />\r\n                <h2>{login}</h2>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.scss';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src={props.avatar} alt=\"\"/>\r\n                {props.name} {props.surname}\r\n                <br/>\r\n                <span>{props.message}</span>\r\n            <div>\r\n                <span>like: {props.like}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { AddPostReduxForm } from '../../../reduxForm/forms';\r\nimport s from './MyPosts.module.scss';\r\nimport Post from './Post/Post';\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let postsEls = [...props.postsData].reverse().map(posts =>\r\n        <Post\r\n            name={posts.firstName}\r\n            surname={posts.lastName}\r\n            avatar={posts.avatar}\r\n            key={posts.id}\r\n            message={posts.post}\r\n            like={posts.likesCount}\r\n        />\r\n    );\r\n\r\n    let onAddPost = (value) => {\r\n        props.addPost(value.myPostInput);\r\n    }\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <AddPostReduxForm onSubmit={onAddPost} />\r\n            </div>\r\n            <div>\r\n                <h3>New posts</h3>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsEls}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;","\r\nimport React from 'react';\r\nimport { addPost, updateNewPostTextAC } from '../../../redux/reducers/profileReducer';\r\nimport MyPosts from './MyPosts';\r\nimport {connect} from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewPostText: (text) => {\r\n            let action = updateNewPostTextAC(text)\r\n            dispatch(action);\r\n        },\r\n        addPost: (newPostText) => {\r\n            dispatch(addPost(newPostText));\r\n        },\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}\r\n                login={props.login}\r\n            />\r\n            <MyPostsContainer\r\n                store={props.store}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/reducers/profileReducer';\r\nimport { withRouter } from 'react-router-dom';\r\n// import { withAuthRedirect } from '../../hoc/WithAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) userId = this.props.authorizedUserId;\r\n        this.props.getUserProfile(userId);\r\n        setTimeout(() => {\r\n            this.props.getStatus(userId);\r\n        }, 1000);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                    profile={this.props.profile}\r\n                    isAuth={this.props.isAuth}\r\n                    status={this.props.status}\r\n                    updateStatus={this.props.updateStatus}\r\n                    login={this.props.login}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nlet AuthRedirectComponent = compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n    withRouter,\r\n    // withAuthRedirect\r\n    )(ProfileContainer);\r\n\r\nexport default AuthRedirectComponent;\r\n"],"sourceRoot":""}